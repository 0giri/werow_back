spring:
  profiles:
    include: oauth

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:3306/werow?useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: giri
    password: 9463

  jpa:
    show_sql: true
    hibernate:
      ddl-auto: ${DDL_AUTO:create-drop}
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy

logging:
  level:
    com.werow: ${VIEW_DEBUG:debug}


app:
  auth:
    tokenSecret: 7JWI7JiB6ri47JWI7JiB6ri47JWI7JiB6ri47JWI7JiB6ri47JWI7JiB6ri47JWI7JiB6ri47JWI7JiB6ri47JWI7JiB6ri47JWI7JiB6ri47JWI7JiB6ri47JWI7JiB6ri47JWI7JiB6ri47JWI7JiB6ri47JWI7JiB6ri47JWI7JiB6ri47JWI7JiB6ri47JWI7JiB6ri47JWI7JiB6ri47JWI7JiB6ri47JWI7JiB6ri4Cg==
    tokenExpirationMsec: 864000000
  oauth2:
    # OAuth2 공급자로 성공적으로 인증 한 후 사용자에 대한 인증 토큰을 생성하고 토큰을
    # 프론트 엔드 클라이언트가 /oauth2/authorize 요청에서 지정한 redirectUri입니다.
    # 쿠키는 모바일 클라이언트에서 잘 작동하지 않기 때문에 사용하지 않습니다.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect